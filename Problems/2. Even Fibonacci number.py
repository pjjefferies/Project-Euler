# -*- coding: utf-8 -*-
"""
Project Euler

Problem 2

Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.

"""
from time import time

if __name__ == '__main__':
    MAX_VALUE = 4000000
    F1 = 1
    F2 = 2
    #Slowest method, find each member of Fibonacci series, test for even
    #and sum - O(n)
    startTimeSlowest = time()
    safetyCounter = 1
    safetyCounterMAX = MAX_VALUE
    sumOfEvenFibsSlowest = F2
    FN_2 = F1
    FN_1 = F2
    while True:
        safetyCounter += 1
        if safetyCounter > safetyCounterMAX:
            break
        FN = FN_2 + FN_1
        if FN <= MAX_VALUE:
            #print("In slowest, method, FN:", FN, ", MAX_VALUE:", MAX_VALUE)
            #print("FN % 2:", FN % 2)
            if ((FN % 2) == 0):
                #print("Found one in slowest method", FN)
                sumOfEvenFibsSlowest += FN
        else:
            break
        FN_2 = FN_1
        FN_1 = FN
    totalTimeSlowest = time() - startTimeSlowest
    print("\n\nThe sum of even-value Fibonacci terms using slowest method is:",
          sumOfEvenFibsSlowest, ".\nTime to calculate:", round(totalTimeSlowest,4), ".")
    
    #Next Fastest method, find every third Fibonacci series, O(n), mem O(n)
    startTimeMedium = time()
    safetyCounter = 1
    safetyCounterMAX = MAX_VALUE
    sumOfEvenFibsMedium = 0
    listOfEveryThirdFib = []
    while True:
        safetyCounter += 1
        if safetyCounter > safetyCounterMAX:
            break
        FN = 2*F1
        if len(listOfEveryThirdFib) > 0:
            FN += 3 * listOfEveryThirdFib[-1]
        for fibNo in listOfEveryThirdFib[:-1]:
            FN += 4 * fibNo
        if FN > MAX_VALUE:
            break
        #print("In medium, FN:", FN, "list:", listOfEveryThirdFib)
        sumOfEvenFibsMedium += FN
        #print("In medium, sum:", sumOfEvenFibsMedium)
        listOfEveryThirdFib.append(FN)
    totalTimeMedium = time() - startTimeMedium
    print("The sum of even-value Fibonacci terms using medium method is:",
          sumOfEvenFibsMedium, ".\nTime to calculate:", round(totalTimeMedium,4), ".")
    
    #Fastest method, use Binet's formula, O(1), mem O(1)
    startTimeFastest = time()
    sumOfEvenFibsFastest = F2
    safetyCounter = 1
    safetyCounterMAX = MAX_VALUE
    sqrtFive = 5**(1/2)
    onePlusSqrtFive = 1 + sqrtFive
    oneMinusSqrtFive = 1 - sqrtFive
    n = 2
    while True:
        safetyCounter += 1
        if safetyCounter > safetyCounterMAX:
            break
        n += 3
        FN = int(round((onePlusSqrtFive**(n+1) - oneMinusSqrtFive**(n+1))/(sqrtFive * 2**(n+1))))
        #print("In Fastest, FN:", FN)
        if FN > MAX_VALUE:
            break
        sumOfEvenFibsFastest += FN
    totalTimeFastest = time() - startTimeFastest
    print("The sum of even-value Fibonacci terms using fastest method is:",
          sumOfEvenFibsFastest, ".\nTime to calculate:", round(totalTimeFastest,4), ".")